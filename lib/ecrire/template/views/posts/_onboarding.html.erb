<div class='onboarding'>
  <section>
    <h2>Customize your blog!</h2>

    <p>Ecrire is built on top of Ruby On Rails. For that reason, you are free to use Rails' API whenever you want.</p>

    <p>However, the default template provided by Ecrire has a few additional methods to help you customize your blog.</p>

  </section>

  <section>
    <h2>Views</h2>
    <h3>Layouts</h3>
    <p class="small"><code>views/layouts/application.html.erb</code></p>

    <p>The layout is where you set the document type, the &lt;head&gt; and everything else that you want to have on every page.</p>

    <pre><code class='language-ruby'># views/layouts/application.html.erb
&lt;!doctype html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;%= title_tag %&gt;
    &lt;%= assets_tags %&gt;
    &lt;%= meta_informations_tags %&gt;
  &lt;/head&gt;

  &lt;%= body_tag id: [controller_name, action_name].join('-') do %&gt;

    &lt;%= admin_navigation %&gt;

    &lt;%= yield %&gt;

  &lt;% end %&gt;
&lt;/html&gt;</code></pre>

    <p>One thing you <strong>must</strong> have in your layout is the <code class='language-ruby'>&lt;%= yield %&gt;</code> call. This call will inject the view into the layout. If you want to learn more about the layout, Ruby on rails has a <a href="http://guides.rubyonrails.org/layouts_and_rendering.html#understanding-yield">great guide that explains</a> the layout more thoroughly.</p>

    <h3>Views</h3>
    <p>The post views is where you can customize your HTML dependant of the URL access. Initially, there's two views configured: <code>posts/index.html.erb</code> and <code>posts/show.html.erb</code></p>

    <h4><code>posts/index.html.erb</code></h4>

    <p>This view is the home page of your blog. If you want to list your post entries, you can do it by adding this code snippet to your view:</p>

    <pre><code class='language-ruby'># views/posts/index.html.erb
&lt;%= posts.each do |post| %&gt;
  &lt;%= link_to post.title, post_path(post) &gt;
&lt;% end %&gt;</code></pre>

    <h4><code>posts/show.html.erb</code></h4>
    <pre><code class='language-ruby'># views/posts/show.html.erb
&lt;%= render post, :content %&gt;</code></pre>


  </section>

  <section>
    <h2>Helpers</h2>
    <p>Helpers are modules you can create to define methods that can be used for different purposes.</p>
    <pre><code class='language-ruby'># helpers/your_helper.rb
module YourHelper
  def tags_list
    Post.all.pluck(&:tags).uniq!.map do |tag|
      link_to posts_path(tag: tag)
    end
  end
end</code></pre>

    <pre><code class='language-html'># views/posts/index.html.erb
&lt;aside&gt;
  &lt;h2&gt;Tags&lt;/h2&gt;

  &lt;p&gt;
    &lt;%= tags_list %&gt;
  &lt;/p&gt;
&lt;aside&gt;</code></pre>
  </section>

  <section>
    <h2>Assets</h2>
    <p>Assets are CSS and JS files.</p>

    <h3>Stylesheets</h3>
    <p class="small"><code>assets/stylesheets/*.css[.scss]</code></p>
    <p>Stylesheets can either be pure CSS or SASS.</p>

    <h3>Javascripts</h3>
    <p class="small"><code>assets/javascripts/*.js[.coffee]</code></p>
    <p>Javascripts can either be pure Javascript or Coffeescript.</p>

    <h3>Images</h3>
    <p class="small"><code>assets/images/*</code></p>
    <p>Images can be any format you want.</p>
  </section>

  <section>
    <h2>Start writing now!</h2>

    <p>Once you will have a first post published, this page will be replaced by a list of your published posts.</p>

    <p>Enjoy!</p>
  </section>
</div>
